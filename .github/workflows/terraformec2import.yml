name: Import EC2 Instance

on: [workflow_dispatch]

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      run: |
        echo "AWS credentials set"

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ap-south-1
        echo "${EC2_SSH_KEY}" > ec2_key.pem
        chmod 400 ec2_key.pem

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0

    - name: Initialize Terraform
      run: terraform init

    - name: Wait for EC2 Instance
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Terraform-ec2-example" --query "Reservations[*].Instances[*].InstanceId" --output text)
        while [ -z "$INSTANCE_ID" ]; do
          echo "Waiting for EC2 instance to be created..."
          sleep 30
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Terraform-ec2-example" --query "Reservations[*].Instances[*].InstanceId" --output text)
        done
        echo "EC2 instance created with ID: $INSTANCE_ID"

    - name: Import EC2 Instance into Terraform
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Terraform-ec2-example" --query "Reservations[*].Instances[*].InstanceId" --output text)
        terraform import aws_instance.Terraform-ec2-example $INSTANCE_ID

    - name: Apply Terraform
      run: terraform apply -auto-approve

    - name: Commit and Push State File
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add terraform.tfstate
        git commit -m "Update Terraform state"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
